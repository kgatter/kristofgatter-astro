---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="shortcut icon" href="/favicon.icon" />
    <link rel="stylesheet" href="/fonts/font.css" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
<style is:global>
  html,
  body {
    --green: #6dff69;
    --green-darker: #06e900;
    --purple: #f2cfea;
    --purple-darker: #d76bbe;
    --sand: #ffd89d;
    --sand-darker: #ffa51e;
    --blue: #007bff;
    --black: #212529;

    --fontFamily: "Graphik Web", sans-serif;
    --fontSizeXL: 45px;
    --fontSizeL: 32px;
    --fontSizeM: 23px;
    --fontSizeS: 16px;
    --fontSizeXS: 11px;

    @media (max-width: 1023px) {
      --fontSizeXL: 34px;
      --fontSizeL: 24px;
      --fontSizeM: 17px;
      --fontSizeS: 12px;
      --fontSizeXS: 9px;
      --standardSpacing: 30px;
    }

    --standardSpacing: 20px;

    font-family: var(--fontFamily);
    letter-spacing: -0.01em;
    font-weight: 400;
    color: var(--black);
    h1,
    h2,
    h3,
    h4,
    h5 {
      text-align: left;
      font-weight: 400;
      margin-bottom: 1.2em;
    }

    width: 100%;
    overflow-x: hidden;

    nav {
      padding: 3em 0;
      margin-top: -1em;
      font-size: var(--fontSizeM);
      color: var(--black);
      @media (max-width: 684px) {
        text-align: center;
      }

      & .backlink {
        position: relative;
        display: inline-block;
        color: var(--black);
        margin-top: -0.15em;
        margin-right: 0.7em;
        transition: color 150ms;
        text-decoration: none;

        & svg {
          margin-right: 0.5em;
          @media (max-width: 1023px) {
            margin-right: 0.25em;
            transform: scale(0.7);
            transform-origin: bottom;
          }
        }

        &:hover {
          color: #666;

          svg {
            transform: translateX(-10px);
            @media (max-width: 1023px) {
              transform: scale(0.7) translateX(-7px);
              transform-origin: bottom;
            }
          }
        }
      }
    }

    h1 {
      font-size: var(--fontSizeXL);
      line-height: 1.2em;
      font-weight: 400;
      letter-spacing: -0.01em;
      text-align: center;
      text-align: left;
    }

    & svg {
      transition:
        transform 250ms,
        opacity 250ms;
      transform: translateX(0);
    }

    p {
      font-size: var(--fontSizeL);
      max-width: 26em;
      margin-bottom: 1em;
    }

    b {
      font-weight: 500;
    }

    svg {
      & * {
        fill: currentColor;
      }
    }

    .kgbutton {
      display: inline-block;
      background-color: var(--green);
      text-decoration: none;
      color: var(--black);
      font-size: 1em;
      padding: 0.55em 2.5em 0.6em;
      border-radius: 10px;
      line-height: 1.5;

      @media (max-width: 684px) {
        padding: 0.55em 1em 0.6em;
      }

      transition:
        color 0.15s ease-in-out,
        background-color 0.15s ease-in-out,
        border-color 0.15s ease-in-out,
        box-shadow 0.15s ease-in-out;

      &:hover {
        background-color: var(--green-darker);
      }

      &.purple {
        background-color: var(--purple);
        &:hover {
          background-color: var(--purple-darker);
        }
      }

      &.sand {
        background-color: var(--sand);
        &:hover {
          background-color: var(--sand-darker);
        }
      }
    }
  }
</style>
